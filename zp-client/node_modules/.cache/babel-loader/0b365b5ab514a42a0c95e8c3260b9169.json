{"ast":null,"code":"var _jsxFileName = \"/Users/gongjin/react/zp-client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './assets/css/index.less';\nimport routers from './routers/routers';\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(HashRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, routers.map((router, index) => {\n  console.log(router.exact, '~~');\n\n  if (router.exact) {\n    console.log(router.routes, '~~!!!');\n    return React.createElement(Route, {\n      key: index,\n      exact: true,\n      path: router.path,\n      render: props => React.createElement(router.component, Object.assign({}, props, {\n        routers: router.routes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Route, {\n      key: index,\n      path: router.path,\n      render: props => React.createElement(router.component, Object.assign({}, props, {\n        routers: router.routes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n})))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/gongjin/react/zp-client/src/index.js"],"names":["React","ReactDOM","HashRouter","Route","Switch","Provider","store","routers","render","map","router","index","console","log","exact","routes","path","props","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,EAAuBC,KAAvB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEAN,QAAQ,CAACO,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQC,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,KAAiB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB,EAAyB,IAAzB;;AACA,MAAGJ,MAAM,CAACI,KAAV,EAAgB;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACK,MAAnB,EAA0B,OAA1B;AAEA,WAAO,oBAAC,KAAD;AAAQ,MAAA,GAAG,EAAEJ,KAAb;AAAoB,MAAA,KAAK,MAAzB;AAA0B,MAAA,IAAI,EAAED,MAAM,CAACM,IAAvC;AACP,MAAA,MAAM,EAAEC,KAAK,IACL,oBAAC,MAAD,CAAQ,SAAR,oBAAsBA,KAAtB;AAA6B,QAAA,OAAO,EAAEP,MAAM,CAACK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH,GAPD,MAOK;AACD,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEJ,KAAZ;AAAmB,MAAA,IAAI,EAAED,MAAM,CAACM,IAAhC;AACP,MAAA,MAAM,EAAEC,KAAK,IACL,oBAAC,MAAD,CAAQ,SAAR,oBAAsBA,KAAtB;AAA6B,QAAA,OAAO,EAAEP,MAAM,CAACK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH;AACJ,CAfD,CAFR,CADJ,CADJ,CADJ,EAyBEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAzBF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter ,  Route , Switch } from 'react-router-dom'\nimport {Provider} from 'react-redux'\n\nimport store from './redux/store'\nimport './assets/css/index.less';\nimport routers from './routers/routers'\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <Switch>\n                {\n                    routers.map((router,index) =>{\n                        console.log(router.exact,'~~')\n                        if(router.exact){\n                            console.log(router.routes,'~~!!!')\n\n                            return <Route  key={index} exact path={router.path} \n                            render={props => (\n                                    <router.component {...props} routers={router.routes} />\n                                )} />\n                        }else{\n                            return <Route key={index} path={router.path} \n                            render={props => (\n                                    <router.component {...props} routers={router.routes} />\n                                )} />\n                        }\n                    })\n                }\n            </Switch>\n        </HashRouter>\n     </Provider>\n, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}