{"ast":null,"code":"import \"antd-mobile/es/wing-blank/style\";\nimport _WingBlank from \"antd-mobile/es/wing-blank\";\nimport \"antd-mobile/es/button/style\";\nimport _Button from \"antd-mobile/es/button\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nimport \"antd-mobile/es/radio/style\";\nimport _Radio from \"antd-mobile/es/radio\";\nimport \"antd-mobile/es/input-item/style\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/white-space/style\";\nimport _WhiteSpace from \"antd-mobile/es/white-space\";\nimport \"antd-mobile/es/toast/style\";\nimport _Toast from \"antd-mobile/es/toast\";\nvar _jsxFileName = \"/Users/gongjin/react/zp-client/src/containers/register/Register.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { register } from '../../redux/actions';\nimport Logo from '../../components/logo/Logo';\nimport './register.less';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (name, val) => {\n      this.setState({\n        [name]: val\n      });\n    };\n\n    this.register = () => {\n      this.props.register(this.state);\n    };\n\n    this.toLogin = () => {\n      this.props.history.replace('/login');\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      password2: '',\n      type: 'dashen'\n    };\n  }\n\n  //除了首次render之后调用componentDidMount，其它render结束之后都是调用componentDidUpdate。\n  componentDidUpdate() {\n    const _this$props$user = this.props.user,\n          message = _this$props$user.message,\n          redirectTo = _this$props$user.redirectTo;\n\n    if (redirectTo) {\n      this.props.history.replace(redirectTo); // return <Redirect to={redirectTo} />\n    }\n\n    if (message !== '') {\n      _Toast.fail(message, 2);\n    }\n  }\n\n  render() {\n    const type = this.state.type;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(_WingBlank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(_List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      type: \"text\",\n      onChange: val => {\n        this.handleChange('username', val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u540D:\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      type: \"password\",\n      onChange: val => {\n        this.handleChange('password', val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u5BC6\\xA0\\xA0\\xA0\\u7801:\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u786E\\u8BA4\\u5BC6\\u7801\",\n      type: \"password\",\n      onChange: val => {\n        this.handleChange('password2', val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u786E\\u8BA4\\u5BC6\\u7801:\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(_List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u7C7B\\xA0\\xA0\\xA0\\u578B:\"), \"\\xA0\\xA0\", React.createElement(_Radio, {\n      checked: type === 'dashen',\n      onChange: val => {\n        this.handleChange('type', 'dashen');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u5927\\u795E\"), \"\\xA0\\xA0\\xA0\", React.createElement(_Radio, {\n      checked: type === 'laoban',\n      onChange: val => {\n        this.handleChange('type', 'laoban');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u8001\\u677F\")), React.createElement(_Button, {\n      type: \"primary\",\n      className: \"logo-nav-bac-color register-but\",\n      onClick: this.register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      onClick: this.toLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u5DF2\\u6709\\u8D26\\u53F7\"))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  register\n})(Register);","map":{"version":3,"sources":["/Users/gongjin/react/zp-client/src/containers/register/Register.jsx"],"names":["React","Component","connect","Redirect","register","Logo","Register","constructor","props","handleChange","name","val","setState","state","toLogin","history","replace","username","password","password2","type","componentDidUpdate","user","message","redirectTo","fail","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { WingBlank, WhiteSpace, List, InputItem, Button, Radio, Toast } from 'antd-mobile';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\n\nimport { register } from '../../redux/actions'\nimport Logo from '../../components/logo/Logo'\nimport './register.less'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            password2: '',\n            type: 'dashen'\n          };\n    }\n    handleChange = (name, val) =>{\n        this.setState({[name]: val})\n    }\n    register = () =>{\n        this.props.register(this.state)\n    }\n    toLogin = () =>{\n        this.props.history.replace('/login')\n    }\n    //除了首次render之后调用componentDidMount，其它render结束之后都是调用componentDidUpdate。\n    componentDidUpdate (){\n        const {message, redirectTo} = this.props.user\n        if(redirectTo){\n            this.props.history.replace(redirectTo)\n            // return <Redirect to={redirectTo} />\n        }\n        if(message !== ''){\n            Toast.fail(message , 2)\n        }\n    }\n    render() {\n        const { type } = this.state\n        return (\n            <div>\n                <Logo />\n                <WingBlank>\n                    <List>\n                        <WhiteSpace/>\n                        <InputItem placeholder='请输入用户名' type=\"text\" onChange={val => {this.handleChange('username',val)}}>用户名:</InputItem>\n                        <WhiteSpace/>\n                        <InputItem placeholder='请输入密码' type=\"password\" onChange={val => {this.handleChange('password',val)}}>密&nbsp;&nbsp;&nbsp;码:</InputItem>\n                        <WhiteSpace/>\n                        <InputItem  placeholder='请确认密码' type=\"password\" onChange={val => {this.handleChange('password2',val)}}>确认密码:</InputItem>\n                        <WhiteSpace/>\n                        <List.Item>\n                            <span>类&nbsp;&nbsp;&nbsp;型:</span>&nbsp;&nbsp;\n                            <Radio checked={type === 'dashen'} onChange={val => {this.handleChange('type','dashen')}}>大神</Radio>&nbsp;&nbsp;&nbsp;\n                            <Radio checked={type === 'laoban'} onChange={val => {this.handleChange('type','laoban')}}>老板</Radio>\n                        </List.Item>\n                        <Button type='primary' className='logo-nav-bac-color register-but' onClick={this.register}>注册</Button>\n                        <WhiteSpace/>\n                        <Button onClick={this.toLogin}>已有账号</Button>\n                    </List>\n                </WingBlank>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state =>({user: state.user}),\n    {register}\n)(Register);"]},"metadata":{},"sourceType":"module"}