{"ast":null,"code":"import \"antd-mobile/es/wing-blank/style\";\nimport _WingBlank from \"antd-mobile/es/wing-blank\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nimport \"antd-mobile/es/button/style\";\nimport _Button from \"antd-mobile/es/button\";\nimport \"antd-mobile/es/input-item/style\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/white-space/style\";\nimport _WhiteSpace from \"antd-mobile/es/white-space\";\nimport \"antd-mobile/es/toast/style\";\nimport _Toast from \"antd-mobile/es/toast\";\nvar _jsxFileName = \"/Users/gongjin/react/zp-client/src/containers/login/Login.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/actions';\nimport Logo from '../../components/logo/Logo';\nimport './login.less';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (name, val) => {\n      this.setState({\n        [name]: val\n      });\n    };\n\n    this.login = () => {\n      console.log(this.state);\n      this.props.login(this.state);\n    };\n\n    this.toRegister = () => {\n      this.props.history.replace('/register');\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  //除了首次render之后调用componentDidMount，其它render结束之后都是调用componentDidUpdate。\n  componentDidUpdate() {\n    const _this$props$user = this.props.user,\n          message = _this$props$user.message,\n          redirectTo = _this$props$user.redirectTo;\n\n    if (redirectTo) {\n      this.props.history.replace('/');\n    }\n\n    if (message) {\n      _Toast.fail(message, 2);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(_WingBlank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(_List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      type: \"text\",\n      onChange: val => {\n        this.handleChange('username', val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u540D:\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      type: \"password\",\n      onChange: val => {\n        this.handleChange('password', val);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\u5BC6\\xA0\\xA0\\xA0\\u7801:\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      className: \"logo-nav-bac-color login-but\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"), React.createElement(_WhiteSpace, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      onClick: this.toRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u53BB\\u6CE8\\u518C\"))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/gongjin/react/zp-client/src/containers/login/Login.jsx"],"names":["React","Component","connect","login","Logo","Login","constructor","props","handleChange","name","val","setState","console","log","state","toRegister","history","replace","username","password","componentDidUpdate","user","message","redirectTo","fail","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { WingBlank, WhiteSpace, List, InputItem, Button, Toast} from 'antd-mobile';\nimport { connect } from 'react-redux';\n\nimport { login } from '../../redux/actions'\nimport Logo from '../../components/logo/Logo'\nimport './login.less'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n    }\n    handleChange = (name, val) =>{\n        this.setState({[name]: val})\n    }\n    login = () =>{\n        console.log(this.state)\n        this.props.login(this.state)\n    }\n    toRegister = () =>{\n        this.props.history.replace('/register')\n    }\n    //除了首次render之后调用componentDidMount，其它render结束之后都是调用componentDidUpdate。\n    componentDidUpdate (){\n        const {message, redirectTo} = this.props.user\n        if(redirectTo){\n            this.props.history.replace('/')\n        }\n        if(message){\n            Toast.fail(message , 2)\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Logo />\n                <WingBlank>\n                    <List>\n                        <WhiteSpace/>\n                        <InputItem placeholder='请输入用户名' type=\"text\" onChange={val => {this.handleChange('username',val)}}>用户名:</InputItem>\n                        <WhiteSpace/>\n                        <InputItem placeholder='请输入密码' type=\"password\" onChange={val => {this.handleChange('password',val)}}>密&nbsp;&nbsp;&nbsp;码:</InputItem>\n                        <WhiteSpace/>\n                        <Button type='primary' className='logo-nav-bac-color login-but' onClick={this.login}>登录</Button>\n                        <WhiteSpace/>\n                        <Button onClick={this.toRegister}>去注册</Button>\n                    </List>\n                </WingBlank>\n            </div>\n        );\n    }\n}\nexport default connect(\n    state =>({user: state.user}),\n    {login}\n)(Login);"]},"metadata":{},"sourceType":"module"}