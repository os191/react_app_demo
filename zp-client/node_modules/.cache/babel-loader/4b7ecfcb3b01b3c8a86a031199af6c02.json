{"ast":null,"code":"import \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nimport \"antd-mobile/es/grid/style\";\nimport _Grid from \"antd-mobile/es/grid\";\nvar _jsxFileName = \"/Users/gongjin/react/zp-client/src/components/header-selector/header-selector.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass HeaderSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = ({\n      text,\n      icon\n    }) => {\n      //更新当前组件状态\n      this.setState({\n        icon: icon\n      }); //调用父组件\n\n      this.props.setHeader(text);\n    };\n\n    this.state = {\n      icon: null //图片对象，默认null\n\n    }; // 准备需要显示的列表数据\n\n    this.headerList = [];\n\n    for (let i = 0; i < 20; i++) {\n      this.headerList.push({\n        text: '头像' + (i + 1),\n        icon: require(\"../../assets/images/headers/\\u5934\\u50CF\".concat(i + 1, \".png\")) //不能使用import\n\n      });\n    }\n  }\n\n  render() {\n    const icon = this.state.icon;\n    const listHeander = '请选择头像'; // const listHeander = !icon ? '请选择头像' :(\n    //     <div>\n    //         已选择头像:<img src={icon} alt ='头像'/>\n    //     </div>\n    // ) \n\n    return React.createElement(_List, {\n      renderHeader: () => listHeander,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(_Grid, {\n      data: this.headerList,\n      columnNum: 5,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nHeaderSelector.propTypes = {\n  setHeader: PropTypes.func.isRequired\n};\nexport default HeaderSelector;","map":{"version":3,"sources":["/Users/gongjin/react/zp-client/src/components/header-selector/header-selector.js"],"names":["React","Component","PropTypes","HeaderSelector","constructor","props","handleClick","text","icon","setState","setHeader","state","headerList","i","push","require","render","listHeander","propTypes","func","isRequired"],"mappings":";;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,WAnBmB,GAmBL,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAD,KAAiB;AAC3B;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAACA;AAAN,OAAd,EAF2B,CAG3B;;AACA,WAAKH,KAAL,CAAWK,SAAX,CAAqBH,IAArB;AACH,KAxBkB;;AAEf,SAAKI,KAAL,GAAa;AACTH,MAAAA,IAAI,EAAE,IADG,CACE;;AADF,KAAb,CAFe,CAKd;;AACA,SAAKI,UAAL,GAAkB,EAAlB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACxB,WAAKD,UAAL,CAAgBE,IAAhB,CAAqB;AACjBP,QAAAA,IAAI,EAAE,QAAMM,CAAC,GAAC,CAAR,CADW;AAEjBL,QAAAA,IAAI,EAAEO,OAAO,mDAAkCF,CAAC,GAAC,CAApC,UAFI,CAEyC;;AAFzC,OAArB;AAKF;AACL;;AAYDG,EAAAA,MAAM,GAAG;AAAA,UACGR,IADH,GACY,KAAKG,KADjB,CACGH,IADH;AAEL,UAAMS,WAAW,GAAI,OAArB,CAFK,CAGL;AACA;AACA;AACA;AACA;;AACA,WACI;AAAM,MAAA,YAAY,EAAE,MAAMA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,IAAI,EAAE,KAAKL,UAAjB;AACQ,MAAA,SAAS,EAAI,CADrB;AACyB,MAAA,OAAO,EAAE,KAAKN,WADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AAzCkC;;AAAjCH,c,CAgBKe,S,GAAY;AACfR,EAAAA,SAAS,EAAER,SAAS,CAACiB,IAAV,CAAeC;AADX,C;AA4BvB,eAAejB,cAAf","sourcesContent":["\n\nimport React, { Component } from 'react';\nimport { List, Grid } from 'antd-mobile'\nimport PropTypes from 'prop-types'\n\nclass HeaderSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            icon: null //图片对象，默认null\n         };\n         // 准备需要显示的列表数据\n         this.headerList = [];\n         for(let i = 0; i < 20; i++){\n            this.headerList.push({\n                text: '头像'+(i+1),\n                icon: require(`../../assets/images/headers/头像${i+1}.png`) //不能使用import\n            })\n            \n         }\n    }\n    static propTypes = {\n        setHeader: PropTypes.func.isRequired\n    }\n\n    handleClick = ({text, icon}) =>{\n        //更新当前组件状态\n        this.setState({icon:icon})\n        //调用父组件\n        this.props.setHeader(text)\n    }\n\n    render() {\n        const { icon } = this.state \n        const listHeander =  '请选择头像'\n        // const listHeander = !icon ? '请选择头像' :(\n        //     <div>\n        //         已选择头像:<img src={icon} alt ='头像'/>\n        //     </div>\n        // ) \n        return (\n            <List renderHeader={() => listHeander}>\n                <Grid data={this.headerList} \n                        columnNum = {5}  onClick={this.handleClick}/>\n            </List>\n        );\n    }\n}\n\nexport default HeaderSelector;"]},"metadata":{},"sourceType":"module"}